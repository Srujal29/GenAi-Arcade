:root {
  --electric-blue: #00a3ff;
  --light-blue: #00ffff;
  --accent-white: #efefef;
  --dark-bg: #0a0f1a;
  --card-bg: rgba(20, 28, 46, 0.8);
}

body {
  font-family: "Inter", sans-serif;
  background-color: var(--dark-bg);
  color: var(--accent-white);
  overflow: hidden;
  cursor: none;
}

#cursor-dot {
  width: 8px;
  height: 8px;
  background-color: var(--light-blue);
  border-radius: 50%;
  position: fixed;
  z-index: 9999;
  pointer-events: none;
  box-shadow: 0 0 10px var(--light-blue);
  transition: transform 0.1s ease-out;
  display: none;
}
@media (pointer: fine) {
  #cursor-dot {
    display: block;
  }
}

.ai-font {
  font-family: "Orbitron", sans-serif;
  letter-spacing: 2px;
}

/* This is a NEW class that ONLY handles the flicker animation */
.text-flicker-anim {
  animation: text-flicker-keyframes 3s linear infinite;
}

.neon-glow-blue {
  text-shadow: 0 0 4px var(--electric-blue), 0 0 8px var(--electric-blue);
}

/* Renamed the keyframes to avoid any caching issues */
@keyframes text-flicker-keyframes {
  0% {
    opacity: 0.8;
    text-shadow: 0 0 6px var(--electric-blue);
  }
  5% {
    opacity: 0.5;
  }
  10% {
    opacity: 0.9;
  }
  20% {
    opacity: 0.6;
  }
  30% {
    opacity: 1;
  }
  40% {
    opacity: 0.7;
  }
  50% {
    opacity: 0.9;
    text-shadow: 0 0 10px var(--electric-blue);
  }
  60% {
    opacity: 0.6;
  }
  70% {
    opacity: 1;
  }
  80% {
    opacity: 0.5;
  }
  100% {
    opacity: 0.9;
  }
}

.neon-btn {
  background-color: transparent;
  border: 2px solid var(--electric-blue);
  color: var(--electric-blue);
  box-shadow: 0 0 8px var(--electric-blue);
  transition: all 0.2s ease-in-out;
  font-weight: bold;
  position: relative;
  overflow: hidden;
}
.neon-btn:hover {
  background-color: var(--electric-blue);
  color: var(--dark-bg);
  box-shadow: 0 0 15px var(--electric-blue), 0 0 30px var(--electric-blue);
  transform: scale(1.05);
}
.neon-btn::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--dark-bg);
  color: var(--electric-blue);
  transform: translateX(-100%);
  transition: transform 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}
.neon-btn:hover::before {
  transform: translateX(0);
}

.screen {
    position: absolute; top: 0; left: 0;
    width: 100%; height: 100%; display: flex;
    flex-direction: column; align-items: center; justify-content: center;
    padding: 1rem;
}

#gameCanvas {
  border: 2px solid var(--electric-blue);
  box-shadow: 0 0 15px var(--electric-blue);
  display: block;
  margin: 0 auto;
  max-width: 100%;
  touch-action: none;
  background-color: transparent;
}

.data-card {
  background-color: var(--card-bg);
  backdrop-filter: blur(8px);
  border: 1px solid rgba(0, 163, 255, 0.3);
}

.speaker-frame {
  border-radius: 50%;
  padding: 5px;
  background: linear-gradient(45deg, var(--dark-bg), #1e3a8a);
  box-shadow: 0 0 15px var(--electric-blue);
}
.speaker-frame img {
  border-radius: 50%;
  border: 2px solid var(--electric-blue);
}

#background-animation,
#crt-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  pointer-events: none;
}

#background-grid {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -2;
  pointer-events: none;
  background-image: linear-gradient(rgba(0, 163, 255, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 163, 255, 0.1) 1px, transparent 1px);
  background-size: 50px 50px;
  /* animation: pan-grid 30s linear infinite; */ /* <-- DELETE OR COMMENT OUT THIS LINE */
}

@keyframes pan-grid {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 50px 50px;
  }
}

#crt-overlay {
  background: radial-gradient(
      ellipse at center,
      rgba(0, 0, 0, 0) 50%,
      rgba(0, 0, 0, 0.5) 100%
    ),
    repeating-linear-gradient(
      0deg,
      rgba(255, 255, 255, 0.05) 0px,
      rgba(255, 255, 255, 0.05) 1px,
      transparent 1px,
      transparent 3px
    );
  animation: crt-flicker 0.1s infinite;
}
@keyframes crt-flicker {
  0% {
    opacity: 0.95;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.95;
  }
}
#app-container {
  perspective: 1000px;
}
#app-container-inner {
  transform: scale(1.05);
  border-radius: 20px;
  overflow: hidden;
  height: 100vh;
}

#boot-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--dark-bg);
  z-index: 10000;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: opacity 1s ease-in-out;
}
#boot-text {
  font-family: "Orbitron", monospace;
  color: var(--electric-blue);
  font-size: 1.5rem;
  text-shadow: 0 0 5px var(--electric-blue);
}

@media (max-width: 768px) {
  #app-container-inner {
    transform: scale(1);
    border-radius: 0;
  }
  body {
    cursor: default;
  }
  #cursor-dot {
    display: none;
  }
  .ai-font {
    letter-spacing: 1px;
  }
}



.glitch-text {
  position: relative;
  animation: glitch-skew 1s infinite linear alternate-reverse;
}
.glitch-text::before,
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.glitch-text::before {
  left: 2px;
  text-shadow: -2px 0 #ff00c1; /* Magenta */
  clip: rect(44px, 450px, 56px, 0);
  animation: glitch-anim 5s infinite linear alternate-reverse;
}
.glitch-text::after {
  left: -2px;
  text-shadow: -2px 0 var(--light-blue), 2px 2px #ff00c1;
  clip: rect(85px, 450px, 90px, 0);
  animation: glitch-anim2 3s infinite linear alternate-reverse;
}

@keyframes glitch-anim {
  0% { clip: rect(42px, 9999px, 44px, 0); transform: skew(0.3deg); }
  5% { clip: rect(17px, 9999px, 96px, 0); }
  /* ... more steps for a complex glitch */
  100% { clip: rect(90px, 9999px, 98px, 0); transform: skew(0.2deg); }
}
@keyframes glitch-anim2 {
  0% { clip: rect(69px, 9999px, 71px, 0); transform: skew(0.8deg); }
  /* ... more steps for a complex glitch */
  100% { clip: rect(30px, 9999px, 32px, 0); transform: skew(0.1deg); }
}
@keyframes glitch-skew {
  0% { transform: skew(0deg); }
  50% { transform: skew(0.2deg); }
  100% { transform: skew(0deg); }
}


/* 2. Animated Card Border */
.data-card {
  position: relative;
  /* ... your existing data-card styles ... */
  background-color: var(--card-bg);
  backdrop-filter: blur(8px);
  border: 1px solid rgba(0, 163, 255, 0.3);
}

.data-card::before, .data-card::after {
  content: '';
  position: absolute;
  width: 15px;
  height: 15px;
  transition: 0.3s ease;
}
.data-card::before {
  top: -2px;
  left: -2px;
  border-top: 2px solid var(--light-blue);
  border-left: 2px solid var(--light-blue);
}
.data-card::after {
  bottom: -2px;
  right: -2px;
  border-bottom: 2px solid var(--light-blue);
  border-right: 2px solid var(--light-blue);
}
.data-card:hover::before, .data-card:hover::after {
  width: calc(100% + 2px);
  height: calc(100% + 2px);
}

.preserve-3d {
  transform-style: preserve-3d;
  transform: perspective(1000px);
}